// <auto-generated />
using System;
using FormularioFoodieApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FormularioFoodieApi.Migrations
{
    [DbContext(typeof(FormularioFoodieDbContext))]
    [Migration("20251003160304_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FormularioFoodieApi.Models.FormularioFoodie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AceptaBeneficios")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("acepta_beneficios");

                    b.Property<bool>("AceptaTerminos")
                        .HasColumnType("boolean")
                        .HasColumnName("acepta_terminos");

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ciudad");

                    b.Property<string>("Comentarios")
                        .HasColumnType("text")
                        .HasColumnName("comentarios");

                    b.Property<bool>("CuentaPublica")
                        .HasColumnType("boolean")
                        .HasColumnName("cuenta_publica");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("pendiente")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaAplicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_aplicacion")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<string>("FrecuenciaContenido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("frecuencia_contenido");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("genero");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre_completo");

                    b.Property<string>("NumeroPersonal")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("numero_personal");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("pais");

                    b.Property<int>("SeguidoresInstagram")
                        .HasColumnType("integer")
                        .HasColumnName("seguidores_instagram");

                    b.Property<int>("SeguidoresTikTok")
                        .HasColumnType("integer")
                        .HasColumnName("seguidores_tiktok");

                    b.Property<string>("SobreTi")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sobre_ti");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.Property<string>("UsuarioInstagram")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("usuario_instagram");

                    b.Property<string>("UsuarioTikTok")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("usuario_tiktok");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .HasDatabaseName("IX_FormulariosFoodie_Email");

                    b.HasIndex("UsuarioId")
                        .IsUnique()
                        .HasDatabaseName("IX_FormulariosFoodie_UsuarioId");

                    b.HasIndex("UsuarioInstagram")
                        .HasDatabaseName("IX_FormulariosFoodie_UsuarioInstagram");

                    b.HasIndex("UsuarioTikTok")
                        .HasDatabaseName("IX_FormulariosFoodie_UsuarioTikTok");

                    b.ToTable("formularios_foodie");
                });
#pragma warning restore 612, 618
        }
    }
}
