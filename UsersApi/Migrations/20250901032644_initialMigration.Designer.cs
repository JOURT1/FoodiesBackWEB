// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UsersApi.Data;

#nullable disable

namespace UsersApi.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    [Migration("20250901032644_initialMigration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UsersApi.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_rol");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("descripcion");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("boolean")
                        .HasColumnName("esta_activo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("text")
                        .HasColumnName("usuario_modificacion");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea")
                        .HasColumnName("version");

                    b.HasKey("IdRol");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("roles");
                });

            modelBuilder.Entity("UsersApi.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("CodigoUsuario")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("codigo_usuario");

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contrasenia");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("boolean")
                        .HasColumnName("esta_activo");

                    b.Property<DateTime?>("FechaBloqueo")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_bloqueo");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<DateTime?>("FechaUltimoAcceso")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_ultimo_acceso");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_vencimiento");

                    b.Property<int>("IntentosFallidos")
                        .HasColumnType("integer")
                        .HasColumnName("intentos_fallidos");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("roles");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("text")
                        .HasColumnName("usuario_modificacion");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea")
                        .HasColumnName("version");

                    b.HasKey("IdUsuario");

                    b.HasIndex("CodigoUsuario")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("UsersApi.Models.UsuarioRol", b =>
                {
                    b.Property<int>("IdUsuarioRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario_rol");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUsuarioRol"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_modificacion");

                    b.Property<int>("IdRol")
                        .HasColumnType("integer")
                        .HasColumnName("id_rol");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("usuario_creacion");

                    b.Property<string>("UsuarioModificacion")
                        .HasColumnType("text")
                        .HasColumnName("usuario_modificacion");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea")
                        .HasColumnName("version");

                    b.HasKey("IdUsuarioRol");

                    b.HasIndex("IdRol");

                    b.HasIndex("IdUsuario", "IdRol")
                        .IsUnique();

                    b.ToTable("usuario_roles");
                });

            modelBuilder.Entity("UsersApi.Models.UsuarioRol", b =>
                {
                    b.HasOne("UsersApi.Models.Rol", "Rol")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UsersApi.Models.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("UsersApi.Models.Rol", b =>
                {
                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("UsersApi.Models.Usuario", b =>
                {
                    b.Navigation("UsuarioRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
